+StateMachine = {
    Class = StateMachine
    +INITIAL = {
        Class = ReferenceContainer
        +START = {
            Class = StateMachineEvent
            NextState = STARTUP
            NextStateError = ERROR
            Timeout = 0
            +PrepareNextStateMsg = {
                Class = Message
                Destination = PendulumApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Startup
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = PendulumApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
    }
    +STARTUP = {
        Class = ReferenceContainer
        +GO_HOMING = {
            Class = StateMachineEvent
            NextState = HOMING
            NextStateError = ERROR
            Timeout = 0
            +PrepareNextStateMsg = {
                Class = Message
                Destination = PendulumApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Homing
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = PendulumApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = PendulumApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
    }
    +HOMING = {
        Class = ReferenceContainer
        +GO_ERROR = {
            Class = StateMachineEvent
            NextState = HOMING
            NextStateError = ERROR
        }
    }
    +ERROR = {
        Class = ReferenceContainer
        +GO_ERROR = {
            Class = StateMachineEvent
            NextState = HOMING
            NextStateError = ERROR
        }
    }
}
$PendulumApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +DutyCycleGAM = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 2
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
        }
        +MotorStatusGAM = {
            Class = IOGAM
            InputSignals = {
                Status = {
                    DataSource = "STM32"
                }
            }
            OutputSignals = {
                MotorState = {
                    Type = uint8
                }
                MotorPosition = {
                    Type = int32
                }
                EncoderPosition = {
                    Type = uint32
                }
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
       	}
        +STM32 = {
            Class = MotorSTM32
            Port = "/dev/ttyACM0"
            BaudRate = 230400
            Signals = {
                Status = {
                    Type = uint8
                    NumberOfElements = 9
                    NumberOfDimensions = 1
                }
                Command = {
                    Type = uint8
                }
                CommandParameter = {
                    Type = int32
                }
            }
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
    }
    +States = {
        Class = ReferenceContainer
        +Startup = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x1
                    Functions = {DutyCycleGAM MotorStatusGAM}
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
